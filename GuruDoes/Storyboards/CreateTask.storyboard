<?xml version="1.0" encoding="UTF-8"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES">
    <device id="retina6_1" orientation="portrait">
        <adaptation id="fullscreen"/>
    </device>
    <dependencies>
        <deployment identifier="iOS"/>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
        <capability name="Safe area layout guides" minToolsVersion="9.0"/>
        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
    </dependencies>
    <scenes>
        <!--CreateTask-->
        <scene sceneID="qr6-Tz-ig5">
            <objects>
                <viewController storyboardIdentifier="CreateTaskVC" id="F34-XM-7yw" customClass="CreateTaskVC" customModule="GuruDoes" customModuleProvider="target" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="ywm-HE-7F8">
                        <rect key="frame" x="0.0" y="0.0" width="414" height="896"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" enabled="NO" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="eAo-5l-k0y">
                                <rect key="frame" x="157" y="722" width="100" height="100"/>
                                <constraints>
                                    <constraint firstAttribute="height" constant="100" id="F3L-3j-yBn"/>
                                    <constraint firstAttribute="width" constant="100" id="gxt-6C-phO"/>
                                </constraints>
                                <state key="normal" title="SAVE">
                                    <color key="titleColor" white="0.66666666666666663" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
                                </state>
                                <connections>
                                    <action selector="savePressed:" destination="F34-XM-7yw" eventType="touchUpInside" id="oeu-4Z-zPN"/>
                                </connections>
                            </button>
                            <textField opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" borderStyle="roundedRect" placeholder="Add the title" textAlignment="center" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="r8f-TF-ssv">
                                <rect key="frame" x="20" y="108" width="374" height="50"/>
                                <constraints>
                                    <constraint firstAttribute="height" constant="50" id="P0Y-Ar-FTf"/>
                                </constraints>
                                <nil key="textColor"/>
                                <fontDescription key="fontDescription" name="AvenirNext-Regular" family="Avenir Next" pointSize="19"/>
                                <textInputTraits key="textInputTraits"/>
                            </textField>
                            <textField opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" borderStyle="roundedRect" placeholder="What would you like to do?" textAlignment="center" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="If0-Vj-JO3">
                                <rect key="frame" x="20" y="178" width="374" height="150"/>
                                <constraints>
                                    <constraint firstAttribute="height" constant="150" id="6c2-UD-cHO"/>
                                </constraints>
                                <nil key="textColor"/>
                                <fontDescription key="fontDescription" name="AvenirNext-Regular" family="Avenir Next" pointSize="24"/>
                                <textInputTraits key="textInputTraits"/>
                                <userDefinedRuntimeAttributes>
                                    <userDefinedRuntimeAttribute type="boolean" value="YES">
                                        <string key="keyPath">let blurEffectView: UIVisualEffectView!
    var tapGestureRecognizer: UITapGestureRecognizer = UITapGestureRecognizer()
    func dismiss(){
        self.presentedViewController.dismiss(animated: true, completion: nil)
    }
    override init(presentedViewController: UIViewController, presenting presentingViewController: UIViewController?) {
        let blurEffect = UIBlurEffect(style: UIBlurEffectStyle.dark)
        blurEffectView = UIVisualEffectView(effect: blurEffect)
        super.init(presentedViewController: presentedViewController, presenting: presentingViewController)
        tapGestureRecognizer = UITapGestureRecognizer(target: self, action: #selector(self.dismiss))
        blurEffectView.autoresizingMask = [.flexibleWidth, .flexibleHeight]
        self.blurEffectView.isUserInteractionEnabled = true
        self.blurEffectView.addGestureRecognizer(tapGestureRecognizer)
    }
    override var frameOfPresentedViewInContainerView: CGRect{
        return CGRect(origin: CGPoint(x: 0, y: self.containerView!.frame.height/2), size: CGSize(width: self.containerView!.frame.width, height: self.containerView!.frame.height/2))
    }
    override func dismissalTransitionWillBegin() {
        self.presentedViewController.transitionCoordinator?.animate(alongsideTransition: { (UIViewControllerTransitionCoordinatorContext) in
            self.blurEffectView.alpha = 0
        }, completion: { (UIViewControllerTransitionCoordinatorContext) in
            self.blurEffectView.removeFromSuperview()
        })
    }
    override func presentationTransitionWillBegin() {
        self.blurEffectView.alpha = 0
        self.containerView?.addSubview(blurEffectView)
        self.presentedViewController.transitionCoordinator?.animate(alongsideTransition: { (UIViewControllerTransitionCoordinatorContext) in
            self.blurEffectView.alpha = 1
        }, completion: { (UIViewControllerTransitionCoordinatorContext) in

        })
    }
    override func containerViewWillLayoutSubviews() {
        super.containerViewWillLayoutSubviews()
        presentedView!.layer.masksToBounds = true
        presentedView!.layer.cornerRadius = 10
    }
    override func containerViewDidLayoutSubviews() {
        super.containerViewDidLayoutSubviews()
        self.presentedView?.frame = frameOfPresentedViewInContainerView
        blurEffectView.frame = containerView!.bounds
   </string>
                                    </userDefinedRuntimeAttribute>
                                    <userDefinedRuntimeAttribute type="boolean" keyPath="layer.maskToBounds" value="YES"/>
                                    <userDefinedRuntimeAttribute type="number" keyPath="layer.cornerRadius">
                                        <integer key="value" value="5"/>
                                    </userDefinedRuntimeAttribute>
                                </userDefinedRuntimeAttributes>
                                <connections>
                                    <action selector="textField:" destination="fUn-X0-c8G" eventType="editingDidEnd" id="O94-rJ-0P7"/>
                                </connections>
                            </textField>
                        </subviews>
                        <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
                        <constraints>
                            <constraint firstItem="eAo-5l-k0y" firstAttribute="centerX" secondItem="ywm-HE-7F8" secondAttribute="centerX" id="6Re-Fm-7Iq"/>
                            <constraint firstItem="If0-Vj-JO3" firstAttribute="top" secondItem="r8f-TF-ssv" secondAttribute="bottom" constant="20" id="7RL-uY-2GO"/>
                            <constraint firstItem="If0-Vj-JO3" firstAttribute="top" secondItem="r8f-TF-ssv" secondAttribute="bottom" constant="20" id="LFK-G2-J0S"/>
                            <constraint firstItem="PZT-XS-HLX" firstAttribute="trailing" secondItem="r8f-TF-ssv" secondAttribute="trailing" constant="20" id="Ntv-s4-OTi"/>
                            <constraint firstItem="r8f-TF-ssv" firstAttribute="leading" secondItem="PZT-XS-HLX" secondAttribute="leading" constant="20" id="ayt-vY-3D9"/>
                            <constraint firstItem="PZT-XS-HLX" firstAttribute="trailing" secondItem="If0-Vj-JO3" secondAttribute="trailing" constant="20" id="kPD-fe-sZl"/>
                            <constraint firstItem="If0-Vj-JO3" firstAttribute="leading" secondItem="PZT-XS-HLX" secondAttribute="leading" constant="20" id="klb-dI-64R"/>
                            <constraint firstItem="r8f-TF-ssv" firstAttribute="top" secondItem="PZT-XS-HLX" secondAttribute="top" constant="20" id="tEl-Vj-aWD"/>
                            <constraint firstItem="PZT-XS-HLX" firstAttribute="bottom" secondItem="eAo-5l-k0y" secondAttribute="bottom" constant="40" id="wVS-Hv-4c9"/>
                        </constraints>
                        <viewLayoutGuide key="safeArea" id="PZT-XS-HLX"/>
                    </view>
                    <navigationItem key="navigationItem" title="CreateTask" id="UbS-8b-MtF">
                        <barButtonItem key="leftBarButtonItem" image="back" id="2ZT-vK-Kwh">
                            <color key="tintColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
                            <connections>
                                <action selector="backPressed:" destination="F34-XM-7yw" id="WV7-wU-Zqo"/>
                            </connections>
                        </barButtonItem>
                    </navigationItem>
                    <freeformSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
                    <connections>
                        <outlet property="descriptionTextField" destination="If0-Vj-JO3" id="gqz-hW-Rhw"/>
                        <outlet property="detailNavigationItem" destination="UbS-8b-MtF" id="TL1-Lx-Ikd"/>
                        <outlet property="saveBtn" destination="eAo-5l-k0y" id="dCI-9A-0DK"/>
                        <outlet property="titleTextField" destination="r8f-TF-ssv" id="FtC-zy-o0a"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="iUB-Fz-3cm" userLabel="First Responder" sceneMemberID="firstResponder"/>
                <exit id="fUn-X0-c8G" userLabel="Exit" sceneMemberID="exit"/>
            </objects>
            <point key="canvasLocation" x="518.84057971014499" y="-135.26785714285714"/>
        </scene>
        <!--Navigation Controller-->
        <scene sceneID="L8f-nt-G30">
            <objects>
                <navigationController automaticallyAdjustsScrollViewInsets="NO" id="skh-0x-ghK" sceneMemberID="viewController">
                    <toolbarItems/>
                    <navigationBar key="navigationBar" contentMode="scaleToFill" insetsLayoutMarginsFromSafeArea="NO" barStyle="blackTranslucent" id="Kmi-q7-5F6">
                        <rect key="frame" x="0.0" y="44" width="414" height="44"/>
                        <autoresizingMask key="autoresizingMask"/>
                        <color key="barTintColor" red="0.0" green="0.89019607840000003" blue="0.40000000000000002" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
                    </navigationBar>
                    <nil name="viewControllers"/>
                    <connections>
                        <segue destination="F34-XM-7yw" kind="relationship" relationship="rootViewController" id="IqY-8U-svo"/>
                    </connections>
                </navigationController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="yp6-DD-17b" userLabel="First Responder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="-117.39130434782609" y="-123.21428571428571"/>
        </scene>
    </scenes>
    <resources>
        <image name="back" width="10" height="16"/>
    </resources>
</document>
